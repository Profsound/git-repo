__author__ = 'Нестеров  Евгений Александрович'

#EASY

# Задача-1:
# Дан список фруктов.
# Напишите программу, выводящую фрукты в виде нумерованного списка,
# выровненного по правой стороне.

# Пример:
# Дано: ["яблоко", "банан", "киви", "арбуз"]
# Вывод:
# 1. яблоко
# 2.  банан
# 3.   киви
# 4.  арбуз

# Подсказка: воспользоваться методом .format()

fruits = ["яблоко", "банан", "киви", "арбуз"]
a = len(fruits)
for i in range(a):
    print(str(i + 1) + '. ' + '{:>7}'.format(fruits[i]))


# Задача-2:
# Даны два произвольные списка.
# Удалите из первого списка элементы, присутствующие во втором списке.

S_1 = {'a', 2, 3, 4, 5, 6, 7, 8, 9}
S_2 = {7, 8, 9, 10, 11, 12, 'a'}
S_1 = S_1 - S_2
print(list(S_1))


# Задача-3:
# Дан произвольный список из целых чисел.
# Получите НОВЫЙ список из элементов исходного, выполнив следующие условия:
# если элемент кратен двум, то разделить его на 4, если не кратен, то умножить на два.

S_1 = [1, 2, 3, 4, 5, 6, 7, 8, 9]
S_2 = []
i = 0
while i < len(S_1):
    if S_1[i] % 2 == 0:
        S_2.append(S_1[i] / 4)
    else:
        S_2.append(S_1[i] * 2)
    i += 1
print(S_2)


#NORMAL

# Задача-1:
# Дан список, заполненный произвольными целыми числами, получите новый список,
# элементами которого будут квадратные корни элементов исходного списка,
# но только если результаты извлечения корня не имеют десятичной части и
# если такой корень вообще можно извлечь
# Пример: Дано: [2, -5, 8, 9, -25, 25, 4]   Результат: [3, 5, 2]


import math
s1 = [-1, 2, 3, 4, 8, 9, 36, 40]
s2 = []
for i in s1:
    if (i > 0) and math.sqrt(i) % 1 == 0:
        s2.append(int(math.sqrt(i)))
print(s2)


# Задача-2: Дана дата в формате dd.mm.yyyy, например: 02.11.2013.
# Ваша задача вывести дату в текстовом виде, например: второе ноября 2013 года.
# Склонением пренебречь (2000 года, 2010 года)

date = str(input("Введите дату в формате dd.mm.yyyy: "))
n = date.split('.')


day = {
'01':'первое',
'02':'второе',
'03':'третье',
'04':'четвертое',
'05':'пятое',
'06':'шестое',
'07':'седьмое',
'08':'восьмое',
'09':'девятое',
'10':'десятое',
'11':'одиннадцатое',
'12':'двенадцатое',
'13':'тринадцатое',
'14':'четырнадцатое',
'15':'пятнадцатое',
'16':'шестнадцатое',
'17':'семнадцатое',
'18':'восемнадцатое',
'19':'девятнадцатое',
'20':'двадцатое',
'21':'двадцать первое',
'22':'двадцать второе',
'23':'двадцать третье',
'24':'двадцать четвертое',
'25':'двадцать пятое',
'26':'двадцать шестое',
'27':'двадцать седьмое',
'28':'двадцать восьмое',
'29':'двадцать девятое',
'30':'тридцатое',
'31':'тридцать первое'}

month = {'01':'января', '02':'февраля', '03':'марта', '04':'апреля',
         '05':'мая', '06':'июня', '07':'июля', '08':'августа',
        '09': 'сентября', '10':'октября', '11':'ноября', '12':'декабря'}

for i in day:
    if n[0] == i:
        n[0] = day[i]
for i in month:
    if n[1] == i:
        n[1] = month[i]
name_date = n[0] + ' ' + n[1] + ' ' + n[2]  + ' ' + "года"
print(name_date)


# Задача-3: Напишите алгоритм, заполняющий список произвольными целыми числами
# в диапазоне от -100 до 100. В списке должно быть n - элементов.
# Подсказка:
# для получения случайного числа используйте функцию randint() модуля random


import random

String_1 = int(input("Введите произвольное число от -100 до 100: "))
List_1 = []
for i in range(String_1):
    List_1.append(random.randint(-100, 100))
print(List_1


# Задача-4: Дан список, заполненный произвольными целыми числами.
# Получите новый список, элементами которого будут: 
# а) неповторяющиеся элементы исходного списка:
# например, lst = [1, 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 2, 4, 5, 6]
# б) элементы исходного списка, которые не имеют повторений:
# например, lst = [1 , 2, 4, 5, 6, 2, 5, 2], нужно получить lst2 = [1, 4, 6]


list_1 = [1, 3, 6, 7, 3, 8, 9, 7]
list_2 = []
list_3 = []

list_2 = list(set(list_1))
for i in list_1:
    if list_1.count(i) == 1:
        list_3.append(i)
print(list_2)
print(list_3)


HARD

# Задание-1: уравнение прямой вида y = kx + b задано в виде строки.
# Определить координату y точки с заданной координатой x.

equation = 'y = -12x + 11111140.2121'
x = 2.5
# вычислите и выведите y

equation = 'y = -12x + 11111140.2121'
x = 2.5
b = []
k_1 = equation.find('=') +2
k_2 = equation.find('x')
k = float(equation[k_1:k_2])
if (equation[k_2 + 2]) == '-':
    minus_2 = -1
else:
    minus_2 = 1

b = float(equation[k_2+4:]) * minus_2
print("y = ", k * x + b)


# Задание-2: Дата задана в виде строки формата 'dd.mm.yyyy'.
# Проверить, корректно ли введена дата.
# Условия корректности:
# 1. День должен приводиться к целому числу в диапазоне от 1 до 30(31)
#  (в зависимости от месяца, февраль не учитываем)
# 2. Месяц должен приводиться к целому числу в диапазоне от 1 до 12
# 3. Год должен приводиться к целому положительному числу в диапазоне от 1 до 9999
# 4. Длина исходной строки для частей должна быть в соответствии с форматом 
#  (т.е. 2 символа для дня, 2 - для месяца, 4 - для года)

# Пример корректной даты
date = '01.11.1985'

# Примеры некорректных дат
date = '01.22.1001'
date = '1.12.1001'
date = '-2.10.3001'


# Задание-3: "Перевёрнутая башня" (Задача олимпиадного уровня)
#
# Вавилонцы решили построить удивительную башню —
# расширяющуюся к верху и содержащую бесконечное число этажей и комнат.
# Она устроена следующим образом — на первом этаже одна комната,
# затем идет два этажа, на каждом из которых по две комнаты, 
# затем идёт три этажа, на каждом из которых по три комнаты и так далее:
#         ...
#     12  13  14
#     9   10  11
#     6   7   8
#       4   5
#       2   3
#         1
#
# Эту башню решили оборудовать лифтом --- и вот задача:
# нужно научиться по номеру комнаты определять,
# на каком этаже она находится и какая она по счету слева на этом этаже.
#
# Входные данные: В первой строчке задан номер комнаты N, 1 ≤ N ≤ 2 000 000 000.
#
# Выходные данные:  Два целых числа — номер этажа и порядковый номер слева на этаже.
#
# Пример:
# Вход: 13
# Выход: 6 2
#
# Вход: 11
# Выход: 5 3


